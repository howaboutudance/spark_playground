[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "spark_playground"
version = "0.1.0"
description = "A repository for learning more about Apache Spark"
authors = [{ name = "Michael Penhallegon", email = "mike@hematite.tech" }]
requires-python = ">=3.12"
license = "Apache-2.0"
dependencies = [
    "dynaconf"
]

[dependency-groups]
dev = [
    "ipython",
    "ipdb"
]
testing = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov"
]

linting = [
    "ruff"
]

[tool.coverage.run]
omit = [
    "*/test/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "^/s*/././."
]
exclude_also = [
    "if __name__ == .__main__."
]
[tool.hatch.build.targets.wheel]
    packages = ["src"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "C", "B", 
    "D1", "D201", "D202", "D205", "D210", "D212", "D4",
    "E4", "E7", "E9", 
    "F", "I", "W",
]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.tox]
requires = ["tox>=4.21"]
env_list = ["py313", "py312", "lint", "format"]

[tool.tox.env_run_base]
dependency_groups = ["dev", "testing"] 
commands = [[
    "pytest",
    "-v",
    "--cov=pomo",
    "--cov-report=term-missing", 
    { replace = "posargs", extend = true }
]]

[tool.tox.env.lint]
dependency_groups = ["linting"]
commands = [
    ["ruff", "check", {replace = "posargs", default = ["src"], extend= true}]
]

[tool.tox.env.format]
dependency_groups = ["linting"]
commands = [
    ["ruff", "format", "--check", {replace = "posargs", default = ["src"], extend= true}]
]